---
kind: Pod
apiVersion: v1
metadata:
  name: nn-hadoop
  namespace: apache
  labels:
    app: nn-hadoop
spec:
  volumes:
    - name: m1share
      persistentVolumeClaim:
        claimName: m1share
    - name: hadoop-nn
      persistentVolumeClaim:
        claimName: hadoop-nn
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - host
  containers:
    - name: broker
      image: >-
        bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
      ports:
        - name: inside
          containerPort: 9870
          protocol: TCP
        - name: inside-rpc
          containerPort: 8020
          protocol: TCP
      env:
        - name: CLUSTER_NAME
          value: test
        - name: CORE_CONF_fs_defaultFS
          value: 'hdfs://nn-hadoop.apache-hadoop.apache.svc.cluster.local:8020'
        - name: CORE_CONF_hadoop_http_staticuser_user
          value: root
        - name: CORE_CONF_hadoop_proxyuser_hue_hosts
          value: '*'
        - name: CORE_CONF_hadoop_proxyuser_hue_groups
          value: '*'
        - name: CORE_CONF_io_compression_codecs
          value: org.apache.hadoop.io.compress.SnappyCodec
        - name: HDFS_CONF_dfs_namenode_name_dir
          value: '/hadoop/dfs/name'
        - name: HDFS_CONF_dfs_webhdfs_enabled
          value: 'true'
        - name: HDFS_CONF_dfs_permissions_enabled
          value: 'false'
        - name: HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check
          value: 'false'
        - name: HDFS_CONF_dfs_namenode_replication_work_multiplier_per_iteration
          value: '2'
        - name: HDFS_CONF_dfs_namenode_replication_max-streams
          value: '2'
        - name: HDFS_CONF_dfs_namenode_replication_max-streams-hard-limit
          value: '4'
      resources:
#        limits:
#          memory: 8000Mi
        requests:
          cpu: 100m
          memory: 400Mi
      volumeMounts:
        - name: hadoop-nn
          mountPath: /tmp/hadoop-root/dfs/name
        - name: hadoop-nn
          mountPath: /hadoop/dfs/name
        - name: m1share
          mountPath: /m1share
      readinessProbe:
        httpGet:
          path: /
          port: 9870
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  securityContext: {}
  hostname: nn-hadoop
  subdomain: apache-hadoop
  schedulerName: default-scheduler
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 90000
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 90000
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority

---
kind: Service
apiVersion: v1
metadata:
  name: apache-hadoop
  namespace: apache
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
spec:
  ports:
    - protocol: TCP
      name: inside
      port: 9870
      targetPort: 9870
    - protocol: TCP
      name: inside-rpc
      port: 8020
      targetPort: 8020
  selector:
    app: nn-hadoop
  clusterIP: None
  type: ClusterIP
  sessionAffinity: None
  publishNotReadyAddresses: true

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
parameters:
  type: Local
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: m1share
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/m1share"

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: hadoop-nn
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /hadoop-nn

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: m1share
  namespace: apache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: m1share
  storageClassName: manual

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hadoop-nn
  namespace: apache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: hadoop-nn
  storageClassName: manual